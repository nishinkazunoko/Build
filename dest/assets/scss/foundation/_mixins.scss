@use "./breakpoints" as *;

@mixin mq($breakpoint: md) {
	@media #{map-get($breakpoints, $breakpoint)} {
		@content;
	}
}
// ホバーをPCのみで指定
@mixin hover {
	@media (hover: hover){
		&:where(:any-link, :enabled, summary):hover {
		@content;
	}
	}
}
@mixin fl($justift-content,$align-items){
	display: flex;
	justify-content: $justift-content;
	align-items: $align-items;
}

@mixin fs($sp,$lg){
	font-size: $sp;
	@include mq(lg){
		font-size: $lg;
	}
}

@mixin mt($sp,$pc){
	margin-top: $sp;
	@include mq(lg){
		margin-top: $pc;
	}
}
@mixin mb($sp,$pc){
	margin-bottom: $sp;
	@include mq(lg){
		margin-bottom: $pc;
	}
}
@mixin maxWid{
	width: 100vw;
	margin: 0 calc(50% - 50vw);
}

// iframeの比率を維持したままレスポンシブ対応　例 @include aspect-ratio(16,9);
@mixin aspect-ratio($width, $height) {
	position: relative;
	&::before {
	content: '';
	float: left;
	padding-top: ($height / $width) * 100%;
	}
	
	&::after {
	content: '';
	display: block;
	clear: both;
	}
	
	& > :first-child {
	height: 100%;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
	}
}

// line-heightを単位なし（em 倍数）指定の場合
@mixin half-leading($line-height) {
	&::before,
	&::after {
		content: "";
		display: block;
		width: 0;
		height: 0;
	}
	&::before {
		margin-top: calc((1 - #{$line-height}) * 0.5em);    
	}
	&::after {
		margin-bottom: calc((1 - #{$line-height}) * 0.5em); 
	}
}